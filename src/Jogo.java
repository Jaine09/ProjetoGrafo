import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Jogo {
    public static void main(String[] args) {

        Grafo<String> grafo = new Grafo<String>();

        // --- SUSPEITOS PRINCIPAIS ---
        grafo.adicionarSuspeito("Arielly");
        grafo.adicionarSuspeito("Eduardo");
        grafo.adicionarSuspeito("Giulia");
        grafo.adicionarSuspeito("Camile");
        grafo.adicionarSuspeito("Alan");
        grafo.adicionarSuspeito("Jaine");

        // --- CARACTER√çSTICAS DE CADA PERSONAGEM ---
        grafo.adicionarCaracteristica("Arielly", "Calma e gentil, sempre tenta ajudar os outros. Ultimamente anda nervosa.");
        grafo.adicionarCaracteristica("Eduardo", "Trabalha com tecnologia. Observador e anal√≠tico, tenta resolver tudo com l√≥gica.");
        grafo.adicionarCaracteristica("Giulia", "Extrovertida e distra√≠da. Vive chegando atrasada nas reuni√µes.");
        grafo.adicionarCaracteristica("Camile", "Criativa e detalhista, costuma perceber o que ningu√©m mais nota.");
        grafo.adicionarCaracteristica("Alan", "Brincalh√£o, mas tem dificuldade em guardar segredos.");
        grafo.adicionarCaracteristica("Jaine", "Reservada e perfeccionista. Evita conflitos e prefere trabalhar sozinha.");

        // --- PISTAS (CONEX√ïES ENTRE OS SUSPEITOS) ---
        grafo.adicionarPistas("O suspeito tem cabelo castanho.", "Eduardo", "Camile");
        grafo.adicionarPistas("O suspeito trabalha diretamente com a v√≠tima.", "Camile", "Jaine");
        grafo.adicionarPistas("O suspeito parecia tenso ultimamente.", "Arielly", "Alan");
        grafo.adicionarPistas("O suspeito sempre quer ir embora primeiro.", "Giulia", "Arielly");
        grafo.adicionarPistas("O suspeito usa acess√≥rios parecidos com os de Alan.", "Eduardo", "Alan");
        grafo.adicionarPistas("O suspeito demonstrava nervosismo durante as reuni√µes.", "Camile", "Eduardo");
        grafo.adicionarPistas("O suspeito fez coment√°rios estranhos sobre o projeto.", "Alan", "Jaine");
        grafo.adicionarPistas("O suspeito e Giulia discutiram recentemente.", "Giulia", "Alan");
        grafo.adicionarPistas("O suspeito parece saber mais do que demonstra.", "Jaine", "Arielly");
        grafo.adicionarPistas("O suspeito tem informa√ß√µes que n√£o deveria saber.", "Alan", "Camile");

        // --- LISTA DE SUSPEITOS PARA SORTEIO ---
        List<String> suspeitos = new ArrayList<>();
        suspeitos.add("Arielly");
        suspeitos.add("Eduardo");
        suspeitos.add("Giulia");
        suspeitos.add("Camile");
        suspeitos.add("Alan");
        suspeitos.add("Jaine");

        Random random = new Random();

        // --- SORTEAR CULPADO ALEAT√ìRIO ---
        String culpado = suspeitos.get(random.nextInt(suspeitos.size()));

        // --- ESCOLHER SUSPEITO INICIAL ALEAT√ìRIO ---
        Vertice<String> suspeitoAtual = grafo.getVertice(
                suspeitos.get(random.nextInt(suspeitos.size()))
        );

        // --- IN√çCIO DO JOGO ---
        Scanner sc = new Scanner(System.in);
        boolean investigando = true;

        System.out.println("=== JOGO DO DETETIVE ===");
        System.out.println("Um sabotador causou um grande problema no projeto da equipe!");
        System.out.println("Voc√™ precisa descobrir quem √© o culpado observando as pistas e caracter√≠sticas.\n");

        System.out.println("Voc√™ come√ßa investigando: " + suspeitoAtual.getDado());
        System.out.println("Caracter√≠sticas: " + grafo.getCaracteristica(suspeitoAtual.getDado()));

        while (investigando) {
            ArrayList<Aresta<String>> pistas = suspeitoAtual.getArestaSaida();

            if (pistas.isEmpty()) {
                System.out.println("\n--- Nenhuma pista dispon√≠vel ---");
                System.out.println("Parece que essa linha de investiga√ß√£o terminou.");
                break;
            }

            System.out.println("\nVoc√™ est√° investigando: " + suspeitoAtual.getDado());
            System.out.println("Caracter√≠sticas: " + grafo.getCaracteristica(suspeitoAtual.getDado()));
            System.out.println("Pistas dispon√≠veis:");

            for (int i = 0; i < pistas.size(); i++) {
                Aresta<String> pista = pistas.get(i);
                System.out.println((i + 1) + ": " + pista.getPista());
            }

            int escolha = 0;
            while (escolha < 1 || escolha > pistas.size()) {
                System.out.print("Escolha a pista (1-" + pistas.size() + "): ");
                try {
                    escolha = sc.nextInt();
                } catch (Exception e) {
                    System.out.println("Digite apenas n√∫meros!");
                    sc.next();
                }
            }

            Aresta<String> pistaEscolhida = pistas.get(escolha - 1);
            suspeitoAtual = pistaEscolhida.getFim();

            System.out.println("\nA pista leva voc√™ at√© " + suspeitoAtual.getDado() + "...");
            System.out.println("-------------------------------------------------");

            // üîç Se o jogador encontrar o culpado, o jogo acaba
            if (suspeitoAtual.getDado().equalsIgnoreCase(culpado)) {
                System.out.println("\nüïµÔ∏è Voc√™ encontrou o(a) verdadeiro(a) culpado(a): " + culpado + "!");
                System.out.println("Excelente trabalho, detetive!");
                investigando = false;
                break;
            }
        }

        // --- ACUSA√á√ÉO FINAL (caso o jogador n√£o tenha encontrado antes) ---
        if (investigando) {
            System.out.print("\nQuem voc√™ acha que √© o culpado? ");
            sc.nextLine(); // limpar buffer
            String palpite = sc.nextLine().trim();

            if (palpite.equalsIgnoreCase(culpado)) {
                System.out.println("\nüéâ PARAB√âNS! Voc√™ analisou bem as pistas e descobriu que " + culpado + " √© o(a) verdadeiro(a) culpado(a)!");
            } else {
                System.out.println("\n‚ùå N√£o foi dessa vez!");
                System.out.println("Voc√™ acusou " + palpite + ", mas o(a) verdadeiro(a) culpado(a) era " + culpado + ".");
                System.out.println("Tente novamente e analise melhor as rela√ß√µes entre os suspeitos.");
            }
        }

        System.out.println("\nFim de jogo. Obrigado por jogar!");
        sc.close();
    }
}
